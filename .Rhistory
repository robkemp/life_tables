filter(!grepl("State Total", County), !grepl("Total", age), !grepl("Source:", County), !grepl("Unk", age))%>%
mutate(year=i,
age=ifelse(age=="Over", "85", age))
deathlist[[i]]=tmp
# assign(paste0("deaths_",i),tmp )
# rm(tmp)
}
deaths=bind_rows(deathlist)
View(deaths)
unique(deaths$age)
View(deaths)
population=read_excel("ofm_pop_sade_county_2010_to_2016.xlsx", sheet="Total")
names(population)
population=read_excel("ofm_pop_sade_county_2010_to_2016.xlsx", sheet="Total")%>%
filter(Year=".")
population=read_excel("ofm_pop_sade_county_2010_to_2016.xlsx", sheet="Total")%>%
filter(Year==".")
View(population)
population=read_excel("ofm_pop_sade_county_2010_to_2016.xlsx", sheet="Total")%>%
filter(Year!=".")
names(population[,1:4])=c("Area", "AreaID", "Year", "Age")
names(population)
names(population[,1:4])
names(population[,1:4])=c("Area", "AreaID", "Year", "Age")
names(population[,1:4])
names(population)
population=read_excel("ofm_pop_sade_county_2010_to_2016.xlsx", sheet="Total")%>%
filter(Year!=".")%>%
rename(`Age Group`=Age)
population=read_excel("ofm_pop_sade_county_2010_to_2016.xlsx", sheet="Total")%>%
filter(Year!=".")%>%
rename(`Age Group`="Age")
population=read_excel("ofm_pop_sade_county_2010_to_2016.xlsx", sheet="Total")%>%
filter(Year!=".")%>%
rename(Age=`Age Group`)
names(population)
names(deaths)
population=read_excel("ofm_pop_sade_county_2010_to_2016.xlsx", sheet="Total")%>%
filter(Year!=".")%>%
rename(age=`Age Group`, County=`Area Name`, year=Year)%>%
recode()%>%
select(County, year, age, Total)
unique(deaths$age)
unique(population$age)
population=read_excel("ofm_pop_sade_county_2010_to_2016.xlsx", sheet="Total")%>%
filter(Year!=".")%>%
rename(age=`Age Group`, County=`Area Name`, year=Year)%>%
# mutate(age=)%>%
select(County, year, age, Total)
unique(population$age)
population=read_excel("ofm_pop_sade_county_2010_to_2016.xlsx", sheet="Total")%>%
filter(Year!=".", !grepl("Total", age))%>%
rename(age=`Age Group`, County=`Area Name`, year=Year)%>%
# mutate(age=)%>%
select(County, year, age, Total)
population=read_excel("ofm_pop_sade_county_2010_to_2016.xlsx", sheet="Total")%>%
filter(Year!=".", !grepl("Total", `Age Group`))%>%
rename(age=`Age Group`, County=`Area Name`, year=Year)%>%
# mutate(age=)%>%
select(County, year, age, Total)
unique(population$age)
unique(deaths$age)
deaths=bind_rows(deathlist)%>%
mutate(age=recode( "< 1"="0-4","1-4"="0-4"))
deaths=bind_rows(deathlist)%>%
mutate(age=recode(age, "< 1"="0-4","1-4"="0-4"))
View(deaths)
names(deaths)
deaths=bind_rows(deathlist)%>%
mutate(age=recode(age, "< 1"="0-4","1-4"="0-4"))%>%
group_by(County, age, year)%>%
deaths=summarise(deaths=sum(deaths))
deaths=bind_rows(deathlist)%>%
mutate(age=recode(age, "< 1"="0-4","1-4"="0-4"))%>%
group_by(County, age, year)%>%
summarise(deaths=sum(deaths))
unique(deaths$age)
unique(population$age)
deaths=bind_rows(deathlist)%>%
mutate(age=recode(age, "< 1"="0-4","1-4"="0-4", "85"="85+"))%>%
group_by(County, age, year)%>%
summarise(deaths=sum(deaths))
population=read_excel("ofm_pop_sade_county_2010_to_2016.xlsx", sheet="Total")%>%
filter(Year!=".", !grepl("Total", `Age Group`))%>%
rename(age=`Age Group`, County=`Area Name`, year=Year)%>%
mutate(age=recode(age, "5-9"="5-14","10-14"="5-14","30-34"="25-34","25-29"="25-34","35-39"="35-44",
"40-44"="35-44","45-49"="45-54","50-54"="45-54","55-59"="55-64","60-64"="55-64",
"65-69"="65-74","70-74"="65-74", "75-79"="75-84","80-84"="75-84"))%>%
select(County, year, age, Total)%>%
group_by(County, year, age)%>%
summarise(Total=sum(Total))
population=read_excel("ofm_pop_sade_county_2010_to_2016.xlsx", sheet="Total")%>%
filter(Year!=".", !grepl("Total", `Age Group`))%>%
rename(age=`Age Group`, County=`Area Name`, year=Year)%>%
mutate(age=recode(age, "5-9"="5-14","10-14"="5-14","30-34"="25-34","25-29"="25-34","35-39"="35-44",
"40-44"="35-44","45-49"="45-54","50-54"="45-54","55-59"="55-64","60-64"="55-64",
"65-69"="65-74","70-74"="65-74", "75-79"="75-84","80-84"="75-84"))%>%
select(County, year, age, Total)
str(population)
population=read_excel("ofm_pop_sade_county_2010_to_2016.xlsx", sheet="Total")%>%
filter(Year!=".", !grepl("Total", `Age Group`))%>%
rename(age=`Age Group`, County=`Area Name`, year=Year)%>%
mutate(age=recode(age, "5-9"="5-14","10-14"="5-14","30-34"="25-34","25-29"="25-34","35-39"="35-44",
"40-44"="35-44","45-49"="45-54","50-54"="45-54","55-59"="55-64","60-64"="55-64",
"65-69"="65-74","70-74"="65-74", "75-79"="75-84","80-84"="75-84"))%>%
select(County, year, age, Total)
population=read_excel("ofm_pop_sade_county_2010_to_2016.xlsx", sheet="Total")%>%
filter(Year!=".", !grepl("Total", `Age Group`))%>%
rename(age=`Age Group`, County=`Area Name`, year=Year)%>%
mutate(age=recode(age, "5-9"="5-14","10-14"="5-14","30-34"="25-34","25-29"="25-34","35-39"="35-44",
"40-44"="35-44","45-49"="45-54","50-54"="45-54","55-59"="55-64","60-64"="55-64",
"65-69"="65-74","70-74"="65-74", "75-79"="75-84","80-84"="75-84"))%>%
select(County, year, age, Total)%>%
group_by(County, year, age)%>%
summarise(Total=sum(as.numeric(Total)))
View(population)
life_table=inner_join(deaths, population)
str(deaths)
str(population)
deaths=bind_rows(deathlist)%>%
mutate(age=recode(age, "< 1"="0-4","1-4"="0-4", "85"="85+"),
year=as.character(year))%>%
group_by(County, age, year)%>%
summarise(deaths=sum(deaths))
population=read_excel("ofm_pop_sade_county_2010_to_2016.xlsx", sheet="Total")%>%
filter(Year!=".", !grepl("Total", `Age Group`))%>%
rename(age=`Age Group`, County=`Area Name`, year=Year)%>%
mutate(age=recode(age, "5-9"="5-14","10-14"="5-14","30-34"="25-34","25-29"="25-34","35-39"="35-44",
"40-44"="35-44","45-49"="45-54","50-54"="45-54","55-59"="55-64","60-64"="55-64",
"65-69"="65-74","70-74"="65-74", "75-79"="75-84","80-84"="75-84"))%>%
select(County, year, age, Total)%>%
group_by(County, year, age)%>%
summarise(Total=sum(as.numeric(Total)))
life_table=inner_join(deaths, population)
View(life_table)
unique(population$age)
unique(deaths$age)
levels=collapse(c("0-4"   "15-19" "20-24" "25-34" "35-44" "45-54" "5-14"  "55-64" "65-74" "75-84" "85+"), sep=",")
population=read_excel("ofm_pop_sade_county_2010_to_2016.xlsx", sheet="Total")%>%
filter(Year!=".", !grepl("Total", `Age Group`))%>%
rename(age=`Age Group`, County=`Area Name`, year=Year)%>%
mutate(age=recode(age, "5-9"="5-14","10-14"="5-14","30-34"="25-34","25-29"="25-34","35-39"="35-44",
"40-44"="35-44","45-49"="45-54","50-54"="45-54","55-59"="55-64","60-64"="55-64",
"65-69"="65-74","70-74"="65-74", "75-79"="75-84","80-84"="75-84"),
age=ordered(age, levels=c("0-4",   "5-14", "15-19", "20-24", "25-34", "35-44", "45-54",
"55-64", "65-74", "75-84" ,"85+")))%>%
select(County, year, age, Total)%>%
group_by(County, year, age)%>%
summarise(Total=sum(as.numeric(Total)))
population$age
life_table=inner_join(deaths, population)%>%
filter(year!="2010")%>%
mutate(age=ordered(age, levels=c("0-4",   "5-14", "15-19", "20-24", "25-34", "35-44", "45-54",
"55-64", "65-74", "75-84" ,"85+")))%>%
arrange(County,age)
population=read_excel("ofm_pop_sade_county_2010_to_2016.xlsx", sheet="Total")%>%
filter(Year!=".", !grepl("Total", `Age Group`))%>%
rename(age=`Age Group`, County=`Area Name`, year=Year)%>%
mutate(age=recode(age, "5-9"="5-14","10-14"="5-14","30-34"="25-34","25-29"="25-34","35-39"="35-44",
"40-44"="35-44","45-49"="45-54","50-54"="45-54","55-59"="55-64","60-64"="55-64",
"65-69"="65-74","70-74"="65-74", "75-79"="75-84","80-84"="75-84"))%>%
select(County, year, age, Total)%>%
group_by(County, year, age)%>%
summarise(Total=sum(as.numeric(Total)))
life_table=inner_join(deaths, population)%>%
filter(year!="2010")%>%
mutate(age=ordered(age, levels=c("0-4",   "5-14", "15-19", "20-24", "25-34", "35-44", "45-54",
"55-64", "65-74", "75-84" ,"85+")))%>%
arrange(County,age)
deaths=bind_rows(deathlist)%>%
mutate(age=recode(age, "< 1"="0-4","1-4"="0-4", "85"="85+"),
year=as.character(year))%>%
group_by(County, age, year)%>%
summarise(deaths=sum(deaths))%>%
ungroup()
population=read_excel("ofm_pop_sade_county_2010_to_2016.xlsx", sheet="Total")%>%
filter(Year!=".", !grepl("Total", `Age Group`))%>%
rename(age=`Age Group`, County=`Area Name`, year=Year)%>%
mutate(age=recode(age, "5-9"="5-14","10-14"="5-14","30-34"="25-34","25-29"="25-34","35-39"="35-44",
"40-44"="35-44","45-49"="45-54","50-54"="45-54","55-59"="55-64","60-64"="55-64",
"65-69"="65-74","70-74"="65-74", "75-79"="75-84","80-84"="75-84"))%>%
select(County, year, age, Total)%>%
group_by(County, year, age)%>%
summarise(Total=sum(as.numeric(Total)))%>%
ungroup()
life_table=inner_join(deaths, population)%>%
filter(year!="2010")%>%
mutate(age=ordered(age, levels=c("0-4",   "5-14", "15-19", "20-24", "25-34", "35-44", "45-54",
"55-64", "65-74", "75-84" ,"85+")))%>%
arrange(County,age)
View(life_table)
life_table=inner_join(deaths, population)%>%
filter(year!="2010")%>%
mutate(age=ordered(age, levels=c("0-4",   "5-14", "15-19", "20-24", "25-34", "35-44", "45-54",
"55-64", "65-74", "75-84" ,"85+")))%>%
arrange(County,age)%>%
group_by(County,Age)%>%
summarise(Total=sum(Total),
deaths=sum(deaths))
life_table=inner_join(deaths, population)%>%
filter(year!="2010")%>%
mutate(age=ordered(age, levels=c("0-4",   "5-14", "15-19", "20-24", "25-34", "35-44", "45-54",
"55-64", "65-74", "75-84" ,"85+")))%>%
arrange(County,age)%>%
group_by(County,age)%>%
summarise(Total=sum(Total),
deaths=sum(deaths))
View(life_table)
table(life_table$County)
life_table=inner_join(deaths, population)%>%
filter(year!="2010")%>%
mutate(age=ordered(age, levels=c("0-4",   "5-14", "15-19", "20-24", "25-34", "35-44", "45-54",
"55-64", "65-74", "75-84" ,"85+")))%>%
arrange(County,age)%>%
group_by(County,age)%>%
summarise(Total=sum(Total),
deaths=sum(deaths))%>%
mutate(nMx=deaths/Total)
x <- c(0,5,15,20,25,35,45,55,65,75,85)
#note that R collapses a single column to a vector when it pulls out the result out of a data.frame
nDx <- life_table$deaths   #other syntax which produces the same result: females[[3]], females[,3],
nKx <- life_table$Total
nMx <- life_table$nMx
life.table <- function( x, nMx){
## simple lifetable using Keyfitz and Flieger separation factors and
## exponential tail of death distribution (to close out life table)
b0 <- 0.07;   b1<- 1.7;
nmax <- length(x)
#nMx = nDx/nKx
n <- c(diff(x),999)          		#width of the intervals
nax <- n / 2;		            	# default to .5 of interval
nax[1] <- b0 + b1 *nMx[1]    		# from Keyfitz & Flieger(1968)
nax[2] <- 1.5  ;
nax[nmax] <- 1/nMx[nmax] 	  	# e_x at open age interval
nqx <- (n*nMx) / (1 + (n-nax)*nMx)
nqx<-ifelse( nqx > 1, 1, nqx);		# necessary for high nMx
nqx[nmax] <- 1.0
lx <- c(1,cumprod(1-nqx)) ;  		# survivorship lx
lx <- lx[1:length(nMx)]
ndx <- lx * nqx ;
nLx <- n*lx - nax*ndx;       		# equivalent to n*l(x+n) + (n-nax)*ndx
nLx[nmax] <- lx[nmax]*nax[nmax]
Tx <- rev(cumsum(rev(nLx)))
ex <- ifelse( lx[1:nmax] > 0, Tx/lx[1:nmax] , NA);
lt <- data.frame(x=x,nax=nax,nmx=nMx,nqx=nqx,lx=lx,ndx=ndx,nLx=nLx,Tx=Tx,ex=ex)
return(lt)
}
##############################################################################################################################
#STEP 4: Apply the function to the data, and review the created life table
##############################################################################################################################
nDx <- life_table$deaths[County==i]   #other syntax which produces the same result: females[[3]], females[,3],
i="Adams"
life_table[life_table$County==i]$deaths
ltl=list()
for (i in unique(life_table$County)){
nDx <- filter(life_table, County=i)%>%select(deaths)   #other syntax which produces the same result: females[[3]], females[,3],
nKx <- filter(life_table, County=i)%>%select(Total)
nMx <- filter(life_table, County=i)%>%select(nMx)
tmp=life.table(x,nMx)
ltl[[i]]=tmp
}
county_life_tables=bind_rows(ltl)
for (i in unique(life_table$County)){
nDx <- filter(life_table, County==i)%>%select(deaths)   #other syntax which produces the same result: females[[3]], females[,3],
nKx <- filter(life_table, County==i)%>%select(Total)
nMx <- filter(life_table, County==i)%>%select(nMx)
tmp=life.table(x,nMx)
ltl[[i]]=tmp
}
county_life_tables=bind_rows(ltl)
View(tmp)
life_table=inner_join(deaths, population)%>%
filter(year!="2010")%>%
mutate(age=ordered(age, levels=c("0-4",   "5-14", "15-19", "20-24", "25-34", "35-44", "45-54",
"55-64", "65-74", "75-84" ,"85+")))%>%
arrange(County,age)%>%
group_by(County,age)%>%
summarise(Total=sum(Total),
deaths=sum(deaths))%>%
mutate(nMx=deaths/Total)
View(life_table)
ltl=list()
View(nMx)
life_table=inner_join(deaths, population)%>%
filter(year!="2010")%>%
mutate(age=ordered(age, levels=c("0-4",   "5-14", "15-19", "20-24", "25-34", "35-44", "45-54",
"55-64", "65-74", "75-84" ,"85+")))%>%
arrange(County,age)%>%
group_by(County,age)%>%
summarise(Total=sum(Total),
deaths=sum(deaths))%>%
mutate(nMx=deaths/Total)%>%
ungroup()
for (i in unique(life_table$County)){
nDx <- filter(life_table, County==i)%>%select(deaths)   #other syntax which produces the same result: females[[3]], females[,3],
nKx <- filter(life_table, County==i)%>%select(Total)
nMx <- filter(life_table, County==i)%>%select(nMx)
tmp=life.table(x,nMx)
ltl[[i]]=tmp
}
View(nDx)
ltl=list()
for (i in unique(life_table$County)){
nDx <- as.vector(filter(life_table, County==i)%>%select(deaths) )  #other syntax which produces the same result: females[[3]], females[,3],
nKx <- as.vector(filter(life_table, County==i)%>%select(Total) )
nMx <- as.vector(filter(life_table, County==i)%>%select(nMx) )
tmp=life.table(x,nMx)
ltl[[i]]=tmp
}
nDx <- as.vector(filter(life_table, County==i)%>%select(deaths) )
nKx <- as.vector(filter(life_table, County==i)%>%select(Total) )
nMx <- as.vector(filter(life_table, County==i)%>%select(nMx) )
tmp=life.table(x,nMx)
x <- c(0,5,15,20,25,35,45,55,65,75,85)
ltl[[i]]=tmp
ltl=list()
for (i in unique(life_table$County)){
nDx <- as.vector(filter(life_table, County==i)%>%select(deaths) )  #other syntax which produces the same result: females[[3]], females[,3],
nKx <- as.vector(filter(life_table, County==i)%>%select(Total) )
nMx <- as.vector(filter(life_table, County==i)%>%select(nMx) )
tmp=life.table(x,nMx)
ltl[[i]]=tmp
}
county_life_tables=bind_rows(ltl)
ltl=list()
for (i in unique(life_table$County)){
x <- c(0,5,15,20,25,35,45,55,65,75,85)
nDx <- as.vector(filter(life_table, County==i)%>%select(deaths) )  #other syntax which produces the same result: females[[3]], females[,3],
nKx <- as.vector(filter(life_table, County==i)%>%select(Total) )
nMx <- as.vector(filter(life_table, County==i)%>%select(nMx) )
tmp=life.table(x,nMx)
ltl[[i]]=tmp
}
x <- c(0,5,15,20,25,35,45,55,65,75,85)
nDx <- as.vector(filter(life_table, County==i)%>%select(deaths) )  #other syntax which produces the same result: females[[3]], females[,3],
nKx <- as.vector(filter(life_table, County==i)%>%select(Total) )
nMx <- as.vector(filter(life_table, County==i)%>%select(nMx) )
tmp=life.table(x,nMx)
View(nMx)
nMx
nMx <- as.vector(filter(life_table, County==i)%>%select(nMx) )
nMx
for (i in unique(life_table$County)){
x <- c(0,5,15,20,25,35,45,55,65,75,85)
nDx <- pull(filter(life_table, County==i)%>%select(deaths) )  #other syntax which produces the same result: females[[3]], females[,3],
nKx <- pull(filter(life_table, County==i)%>%select(Total) )
nMx <- pull(filter(life_table, County==i)%>%select(nMx) )
tmp=life.table(x,nMx)
ltl[[i]]=tmp
}
county_life_tables=bind_rows(ltl)
View(county_life_tables)
##############################################################################################################################
life.table <- function( x, nMx, name){
## simple lifetable using Keyfitz and Flieger separation factors and
## exponential tail of death distribution (to close out life table)
b0 <- 0.07;   b1<- 1.7;
nmax <- length(x)
#nMx = nDx/nKx
n <- c(diff(x),999)          		#width of the intervals
nax <- n / 2;		            	# default to .5 of interval
nax[1] <- b0 + b1 *nMx[1]    		# from Keyfitz & Flieger(1968)
nax[2] <- 1.5  ;
nax[nmax] <- 1/nMx[nmax] 	  	# e_x at open age interval
nqx <- (n*nMx) / (1 + (n-nax)*nMx)
nqx<-ifelse( nqx > 1, 1, nqx);		# necessary for high nMx
nqx[nmax] <- 1.0
lx <- c(1,cumprod(1-nqx)) ;  		# survivorship lx
lx <- lx[1:length(nMx)]
ndx <- lx * nqx ;
nLx <- n*lx - nax*ndx;       		# equivalent to n*l(x+n) + (n-nax)*ndx
nLx[nmax] <- lx[nmax]*nax[nmax]
Tx <- rev(cumsum(rev(nLx)))
ex <- ifelse( lx[1:nmax] > 0, Tx/lx[1:nmax] , NA);
lt <- data.frame(County=name,x=x,nax=nax,nmx=nMx,nqx=nqx,lx=lx,ndx=ndx,nLx=nLx,Tx=Tx,ex=ex)
return(lt)
}
ltl=list()
for (i in unique(life_table$County)){
x <- c(0,5,15,20,25,35,45,55,65,75,85)
nDx <- pull(filter(life_table, County==i)%>%select(deaths) )  #other syntax which produces the same result: females[[3]], females[,3],
nKx <- pull(filter(life_table, County==i)%>%select(Total) )
nMx <- pull(filter(life_table, County==i)%>%select(nMx) )
tmp=life.table(x,nMx,i)
ltl[[i]]=tmp
}
county_life_tables=bind_rows(ltl)
View(county_life_tables)
life.table <- function( x, nMx, name){
## simple lifetable using Keyfitz and Flieger separation factors and
## exponential tail of death distribution (to close out life table)
b0 <- 0.07;   b1<- 1.7;
nmax <- length(x)
#nMx = nDx/nKx
n <- c(diff(x),999)          		#width of the intervals
nax <- n / 2;		            	# default to .5 of interval
nax[1] <- b0 + b1 *nMx[1]    		# from Keyfitz & Flieger(1968)
nax[2] <- 1.5  ;
nax[nmax] <- 1/nMx[nmax] 	  	# e_x at open age interval
nqx <- (n*nMx) / (1 + (n-nax)*nMx)
nqx<-ifelse( nqx > 1, 1, nqx);		# necessary for high nMx
nqx[nmax] <- 1.0
lx <- c(1,cumprod(1-nqx)) ;  		# survivorship lx
lx <- lx[1:length(nMx)]
ndx <- lx * nqx ;
nLx <- n*lx - nax*ndx;       		# equivalent to n*l(x+n) + (n-nax)*ndx
nLx[nmax] <- lx[nmax]*nax[nmax]
Tx <- rev(cumsum(rev(nLx)))
ex <- ifelse( lx[1:nmax] > 0, Tx/lx[1:nmax] , NA);
lt <- data.frame(County=name,age=x,nax=nax,nmx=nMx,nqx=nqx,lx=lx,ndx=ndx,nLx=nLx,Tx=Tx,ex=ex)
return(lt)
}
##############################################################################################################################
#STEP 4: Apply the function to the data, and review the created life table
##############################################################################################################################
ltl=list()
for (i in unique(life_table$County)){
x <- c(0,5,15,20,25,35,45,55,65,75,85)
nDx <- pull(filter(life_table, County==i)%>%select(deaths) )  #other syntax which produces the same result: females[[3]], females[,3],
nKx <- pull(filter(life_table, County==i)%>%select(Total) )
nMx <- pull(filter(life_table, County==i)%>%select(nMx) )
tmp=life.table(x,nMx,i)
ltl[[i]]=tmp
}
county_life_tables=bind_rows(ltl)
# females.life.table<-life.table(x,nMx)
# females.life.table
e0=county_life_tables%>%
filter(age=0)%>%
select(County, age, e0=ex)
View(county_life_tables)
e0=county_life_tables%>%
filter(age==0)%>%
select(County, age, e0=ex)
View(e0)
e0=county_life_tables%>%
filter(age==0)%>%
select(County, e0=ex)
write.csv(e0, "e0_2016_5yr.csv", stringsAsFactors=FALSE, row.names = FALSE )
write.csv(e0, "e0_2016_5yr.csv", row.names = FALSE )
life_table=inner_join(deaths, population)%>%
filter(year!="2016")%>%
mutate(age=ordered(age, levels=c("0-4",   "5-14", "15-19", "20-24", "25-34", "35-44", "45-54",
"55-64", "65-74", "75-84" ,"85+")))%>%
arrange(County,age)%>%
group_by(County,age)%>%
summarise(Total=sum(Total),
deaths=sum(deaths))%>%
mutate(nMx=deaths/Total)%>%
ungroup()
#STEP 2: Read in or create the fundamental pieces of the life table (age groupings, deaths by age, population by age ->death rates by age
##############################################################################################################################
#note that R collapses a single column to a vector when it pulls out the result out of a data.frame
##############################################################################################################################
#STEP 3: Read in the period life table function
##############################################################################################################################
life.table <- function( x, nMx, name){
## simple lifetable using Keyfitz and Flieger separation factors and
## exponential tail of death distribution (to close out life table)
b0 <- 0.07;   b1<- 1.7;
nmax <- length(x)
#nMx = nDx/nKx
n <- c(diff(x),999)          		#width of the intervals
nax <- n / 2;		            	# default to .5 of interval
nax[1] <- b0 + b1 *nMx[1]    		# from Keyfitz & Flieger(1968)
nax[2] <- 1.5  ;
nax[nmax] <- 1/nMx[nmax] 	  	# e_x at open age interval
nqx <- (n*nMx) / (1 + (n-nax)*nMx)
nqx<-ifelse( nqx > 1, 1, nqx);		# necessary for high nMx
nqx[nmax] <- 1.0
lx <- c(1,cumprod(1-nqx)) ;  		# survivorship lx
lx <- lx[1:length(nMx)]
ndx <- lx * nqx ;
nLx <- n*lx - nax*ndx;       		# equivalent to n*l(x+n) + (n-nax)*ndx
nLx[nmax] <- lx[nmax]*nax[nmax]
Tx <- rev(cumsum(rev(nLx)))
ex <- ifelse( lx[1:nmax] > 0, Tx/lx[1:nmax] , NA);
lt <- data.frame(County=name,age=x,nax=nax,nmx=nMx,nqx=nqx,lx=lx,ndx=ndx,nLx=nLx,Tx=Tx,ex=ex)
return(lt)
}
##############################################################################################################################
#STEP 4: Apply the function to the data, and review the created life table
##############################################################################################################################
ltl=list()
for (i in unique(life_table$County)){
x <- c(0,5,15,20,25,35,45,55,65,75,85)
nDx <- pull(filter(life_table, County==i)%>%select(deaths) )  #other syntax which produces the same result: females[[3]], females[,3],
nKx <- pull(filter(life_table, County==i)%>%select(Total) )
nMx <- pull(filter(life_table, County==i)%>%select(nMx) )
tmp=life.table(x,nMx,i)
ltl[[i]]=tmp
}
county_life_tables=bind_rows(ltl)
# females.life.table<-life.table(x,nMx)
# females.life.table
e0=county_life_tables%>%
filter(age==0)%>%
select(County, e0=ex)
write.csv(e0, "e0_2015_5yr.csv", row.names = FALSE )
warnings()
n <- c(diff(x),999)
n
nax <- n / 2;
nax
nax[1] <- b0 + b1 *nMx[1]
b0 <- 0.07;   b1<- 1.7;
nax[1] <- b0 + b1 *nMx[1]
nax
nax[nmax] <- 1/nMx[nmax]
nmax <- length(x)
nax[nmax] <- 1/nMx[nmax]
nax
